version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - uber_net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uber_net

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - uber_net

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "ride_requests:1:1,ride_responses:1:1,billing_events:1:1,driver_events:1:1,customer_events:1:1"
    depends_on:
      - zookeeper
    networks:
      - uber_net

  ml_service:
    build:
      context: .
      dockerfile: ./FastAPI/dockerfile
    container_name: ml_service
    ports:
      - "8000:8000"
    networks:
      - uber_net

  backend:
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongodb
      - redis
      - kafka
      - ml_service
    environment:
      - PORT=5000
      - NODE_ENV=development
      - MONGO_URI=mongodb://root:password@mongodb:27017/uber_simulation?authSource=admin
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=24h
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - KAFKA_BROKER=kafka:9092
      - ML_API_URL=http://ml_service:8000
    networks:
      - uber_net

networks:
  uber_net:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: